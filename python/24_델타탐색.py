# 델타탐색

n = 3  # 행 크기 (세로)
m = 3  # 열 크기 (가로)

# 1. 상하좌우 델타값 정의
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

# 2. 출발점 정의
x, y = 1, 1

# 3. 이동할 위치의 좌표값 계산
# 상(위쪽)
nx = x + dx[0]  # x - 1
ny = y + dy[0]  # y + 0

# 하(아래쪽)
nx = x + dx[1]  # x + 1
ny = y + dy[1]  # y + 0

# 좌(왼쪽)
nx = x + dx[2]  # x + 0
ny = y + dy[2]  # y - 1

# 우 (오른쪽)
nx = x + dx[3]  # x + 0
ny = y + dy[3]  # y + 1

# 4. 범위 확인 후 갱신
if 0 <= nx < n and 0 <= ny < m:
    x, y = nx, ny  # 실제로 이동

"""
연습

3 x 3 행렬의 (2, 1) 위치에서 출발한다.
아래쪽으로 한칸 이동한다.
"""

n, m = 3, 3
x, y = 2, 1

# 상하좌우
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

# 다음 위치 계산
nx = x + dx[1]
ny = y + dy[1]

# 혹시나 범위에서 벗어날 수도 있으니 검사 후 이동
if 0 <= nx < n and 0 <= ny < m:
    x, y = nx, ny

print(x, y)  # (2, 1)
